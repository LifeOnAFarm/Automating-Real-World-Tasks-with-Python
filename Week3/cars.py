#!/usr/bin/env python3

import json
import locale
import sys
import emails
import reports


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  years = {}
  models = {}
  max_revenue = {"revenue": 0}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item

    years[format_car(item["car"])] = item["total_sales"]

    if item["car"]["car_year"] in models:
        models[item["car"]["car_year"]] = item["total_sales"] + models[item["car"]["car_year"]]
    else:
        models[item["car"]["car_year"]] = item["total_sales"]
    
    # TODO: also handle max sales
    # TODO: also handle most popular car_year

  mostYears = max(years, key=years.get)
  mostModels = max(models, key=models.get)
  numYears = years[mostYears]
  numModels = models[mostModels]

  summary = "The {} generated the most revenue: ${}\nThe {} had the most sales: {}\nThe most popular year was {} with {} sales.".format(
      format_car(max_revenue["car"]), max_revenue["revenue"],mostModels, numModels,mostYears, numYears)

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  pdfData = cars_dict_to_table(data)

  reports.generate("/tmp/cars.pdf", "Sales summary for the last month", summary, pdfData)
  sender = "automation@example.com"
  receiver = "{}@example.com".format(os.environ.get('USER'))
  subject = "Sales summary for last month"
  body = summary
  message = emails.generate(sender, receiver, subject, body, "/tmp/cars.pdf")
  emails.send(message)


if __name__ == "__main__":
  main(sys.argv)
